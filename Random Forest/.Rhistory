df3 <-data.frame(TV_N=TV/N, test=Err_Test, train=Err_train, stringsAsFactors=FALSE)
df3<-rbind(read.xlsx("/Users/subinieee/Desktop/ggRFSRC plot/test2.xlsx", sheet="TV_N"), df3)
write.xlsx(df1,"/Users/subinieee/Desktop/ggRFSRC plot/test2.xlsx",sheetName="P_N", append=FALSE)
write.xlsx(df2,"/Users/subinieee/Desktop/ggRFSRC plot/test2.xlsx",sheetName="TV_P",append=TRUE)
write.xlsx(df2,"/Users/subinieee/Desktop/ggRFSRC plot/test2.xlsx",sheetName="TV_N", append=TRUE)
wb<-createWorkbook()
addWorksheet(wb, "P_N")
writeData(wb,sheet="P_N",df1)
addWorksheet(wb, "TV_P")
writeData(wb,sheet="TV_P",df2)
addWorksheet(wb, "TV_N")
writeData(wb,sheet="TV_N",df3)
saveWorkbook(wb, "/Users/subinieee/Desktop/ggRFSRC plot/test2.xlsx", overwrite = TRUE)
# Data cleaning (read .dat file and remove index column)
data1 <-read.delim("/Users/subinieee/Desktop/ggRFSRC plot/EOTy_N100_P20-100_TV20_R1/data/SD100.dat"),
skip=3,
sep=(" "),
nrows=N,
header = FALSE,
stringsAsFactors = FALSE)
# Data cleaning (read .dat file and remove index column)
data1 <-read.delim("/Users/subinieee/Desktop/ggRFSRC plot/EOTy_N100_P20-100_TV20_R1/data/SD100.dat",
skip=3,
sep=(" "),
nrows=N,
header = FALSE,
stringsAsFactors = FALSE)
set.seed(100)
data2 <- data1[,-1]
#column names
#colnames(data2) <-st.cols
col_names <-list(1:ncol(data2))
col_names <-paste0("","A",col_names[[1]],"")
colnames(data2)[length(colnames(data2))-1] <- "time"
colnames(data2)[length(colnames(data2))] <- "event"
data2$event <-as.numeric(data2$event)
# Create the gg_survival object
gg_dta <- gg_survival(interval="time",
censor="event",
data=data2,
conf.int=0.95)
#creat a folder to contain the results
dir.create(path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
# Survival probability vs observation time
plot(gg_dta) +
labs(y="Survival Probability",
x="Observation Time(years)",
color="Treatment",
fill="treatment") +
theme(legend.position=c(0.2,0.2)) +
coord_cartesian(y=c(0,1.01))
ggsave("surv_obstime.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
#cumulative hazard vs obs time
plot(gg_dta, type = "cum_haz") +
labs(y = "Cumulative Hazard",
x = "Observation Time (years)",
color = "Treatment", fill = "Treatment") +
theme(legend.position = c(0.2, 0.8)) +
coord_cartesian(ylim = c(-0.02, 1.22))
ggsave("cum_hazard.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/"))
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
ggsave("OOB_err.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc <-plot(gg_rfsrc(rfsrc_train),alpha=0.2)+
theme(legend.position="none")+
#scale_color_manual(values = strCol)+
labs(y="Survival Probability",
x="Time(years)")+
coord_cartesian(ylim=c(-0.01,1.01))
show(ggRFsrc)
ggsave("rfsrc_train.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
t<- median(data2$time)
m <- which.min(abs(rfsrc_train$time.interest - t))
t<- rfsrc_train$time.interest[m]
#
# Get the ground truth as a vector of who did survive beyond t
truth <- data2$time > t
#
# Get the prediction of who rf thinks will survive > t
pred_train <- rfsrc_train$survival[,m] >0.5 #rfsrc_train$survival[,m] > 0.5
pred_test <- rfsrc_train$survival.oob[,m] >0.5 #rfsrc_train$survival.oob[,m] >0.5
# Confusion matrix
cm_train <- matrix(c(length(which(truth=="FALSE" & pred_train=="FALSE")),length(which(truth=="FALSE" & pred_train=="TRUE")),
length(which(truth=="TRUE" & pred_train=="FALSE")),length(which(truth=="TRUE" & pred_train=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_train) <- c("FALSE","TRUE")
rownames(cm_train) <- c("FALSE","TRUE")
cm_train <- as.table(cm_train)
cm_test <- matrix(c(length(which(truth=="FALSE" & pred_test=="FALSE")),length(which(truth=="FALSE" & pred_test=="TRUE")),
length(which(truth=="TRUE" & pred_test=="FALSE")),length(which(truth=="TRUE" & pred_test=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_test) <- c("FALSE","TRUE")
rownames(cm_test) <- c("FALSE","TRUE")
cm_test <- as.table(cm_test)
# Accuracy
accuracy_train <- (cm_train[1,1] + cm_train[2,2])/sum(cm_train)
accuracy_test <-(cm_test[1,1] + cm_test[2,2])/sum(cm_test)
plot(gg_vimp(rfsrc_train))+
theme(legend.position=c(p=0.8,0.2))+
labs(fill="VIMP > 0")
ggsave("vimp.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
varsel_train <- var.select(rfsrc_train)
View(rfsrc_train)
View(varsel_train)
View(gg_dta)
library(randomForestSRC)
library(dplyr)
library(ggplot2)
library(ggRandomForests)
library(parallel)
library(caret)
library(readr)
library(openxlsx)
N <-50
# Data cleaning (read .dat file and remove index column)
data1 <-read.delim("/Users/subinieee/Documents/GitHub/mscproject/Data/test1.dat",
skip=3,
sep=(" "),
nrows=N,
header = FALSE,
stringsAsFactors = FALSE)
set.seed(100)
data2 <- data1[,-1]
#column names
#colnames(data2) <-st.cols
col_names <-list(1:ncol(data2))
col_names <-paste0("","A",col_names[[1]],"")
colnames(data2)[length(colnames(data2))-1] <- "time"
colnames(data2)[length(colnames(data2))] <- "event"
data2$event <-as.numeric(data2$event)
# Create the gg_survival object
gg_dta <- gg_survival(interval="time",
censor="event",
data=data2,
conf.int=0.95)
#creat a folder to contain the results
dir.create(path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
# Survival probability vs observation time
plot(gg_dta) +
labs(y="Survival Probability",
x="Observation Time(years)",
color="Treatment",
fill="treatment") +
theme(legend.position=c(0.2,0.2)) +
coord_cartesian(y=c(0,1.01))
ggsave("surv_obstime.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
#cumulative hazard vs obs time
plot(gg_dta, type = "cum_haz") +
labs(y = "Cumulative Hazard",
x = "Observation Time (years)",
color = "Treatment", fill = "Treatment") +
theme(legend.position = c(0.2, 0.8)) +
coord_cartesian(ylim = c(-0.02, 1.22))
ggsave("cum_hazard.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/"))
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 2000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
ggsave("OOB_err.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc <-plot(gg_rfsrc(rfsrc_train),alpha=0.2)+
theme(legend.position="none")+
#scale_color_manual(values = strCol)+
labs(y="Survival Probability",
x="Time(years)")+
coord_cartesian(ylim=c(-0.01,1.01))
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
ggsave("OOB_err.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc <-plot(gg_rfsrc(rfsrc_train),alpha=0.2)+
theme(legend.position="none")+
#scale_color_manual(values = strCol)+
labs(y="Survival Probability",
x="Time(years)")+
coord_cartesian(ylim=c(-0.01,1.01))
show(ggRFsrc)
ggsave("rfsrc_train.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
t<- median(data2$time)
m <- which.min(abs(rfsrc_train$time.interest - t))
t<- rfsrc_train$time.interest[m]
#
# Get the ground truth as a vector of who did survive beyond t
truth <- data2$time > t
#
# Get the prediction of who rf thinks will survive > t
pred_train <- rfsrc_train$survival[,m] >0.5 #rfsrc_train$survival[,m] > 0.5
pred_test <- rfsrc_train$survival.oob[,m] >0.5 #rfsrc_train$survival.oob[,m] >0.5
# Confusion matrix
cm_train <- matrix(c(length(which(truth=="FALSE" & pred_train=="FALSE")),length(which(truth=="FALSE" & pred_train=="TRUE")),
length(which(truth=="TRUE" & pred_train=="FALSE")),length(which(truth=="TRUE" & pred_train=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_train) <- c("FALSE","TRUE")
rownames(cm_train) <- c("FALSE","TRUE")
cm_train <- as.table(cm_train)
cm_test <- matrix(c(length(which(truth=="FALSE" & pred_test=="FALSE")),length(which(truth=="FALSE" & pred_test=="TRUE")),
length(which(truth=="TRUE" & pred_test=="FALSE")),length(which(truth=="TRUE" & pred_test=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_test) <- c("FALSE","TRUE")
rownames(cm_test) <- c("FALSE","TRUE")
cm_test <- as.table(cm_test)
# Accuracy
accuracy_train <- (cm_train[1,1] + cm_train[2,2])/sum(cm_train)
accuracy_test <-(cm_test[1,1] + cm_test[2,2])/sum(cm_test)
plot(gg_vimp(rfsrc_train))+
theme(legend.position=c(p=0.8,0.2))+
labs(fill="VIMP > 0")
ggsave("vimp.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
varsel_train <- var.select(rfsrc_train)
cm_train
cm_test
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 15,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
ggsave("OOB_err.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc <-plot(gg_rfsrc(rfsrc_train),alpha=0.2)+
theme(legend.position="none")+
#scale_color_manual(values = strCol)+
labs(y="Survival Probability",
x="Time(years)")+
coord_cartesian(ylim=c(-0.01,1.01))
show(ggRFsrc)
ggsave("rfsrc_train.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
t<- median(data2$time)
m <- which.min(abs(rfsrc_train$time.interest - t))
t<- rfsrc_train$time.interest[m]
#
# Get the ground truth as a vector of who did survive beyond t
truth <- data2$time > t
#
# Get the prediction of who rf thinks will survive > t
pred_train <- rfsrc_train$survival[,m] >0.5 #rfsrc_train$survival[,m] > 0.5
pred_test <- rfsrc_train$survival.oob[,m] >0.5 #rfsrc_train$survival.oob[,m] >0.5
# Confusion matrix
cm_train <- matrix(c(length(which(truth=="FALSE" & pred_train=="FALSE")),length(which(truth=="FALSE" & pred_train=="TRUE")),
length(which(truth=="TRUE" & pred_train=="FALSE")),length(which(truth=="TRUE" & pred_train=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_train) <- c("FALSE","TRUE")
rownames(cm_train) <- c("FALSE","TRUE")
cm_train <- as.table(cm_train)
cm_test <- matrix(c(length(which(truth=="FALSE" & pred_test=="FALSE")),length(which(truth=="FALSE" & pred_test=="TRUE")),
length(which(truth=="TRUE" & pred_test=="FALSE")),length(which(truth=="TRUE" & pred_test=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_test) <- c("FALSE","TRUE")
rownames(cm_test) <- c("FALSE","TRUE")
cm_test <- as.table(cm_test)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE,
bootstrap=by.node)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc.cart(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE,
bootstrap=by.node)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc.cart(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
plot(na.omit(gg_error1))
ggsave("OOB_err.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc <-plot(gg_rfsrc(rfsrc_train),alpha=0.2)+
theme(legend.position="none")+
#scale_color_manual(values = strCol)+
labs(y="Survival Probability",
x="Time(years)")+
coord_cartesian(ylim=c(-0.01,1.01))
show(ggRFsrc)
ggsave("rfsrc_train.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
t<- median(data2$time)
m <- which.min(abs(rfsrc_train$time.interest - t))
t<- rfsrc_train$time.interest[m]
#
# Get the ground truth as a vector of who did survive beyond t
truth <- data2$time > t
#
# Get the prediction of who rf thinks will survive > t
pred_train <- rfsrc_train$survival[,m] >0.5 #rfsrc_train$survival[,m] > 0.5
pred_test <- rfsrc_train$survival.oob[,m] >0.5 #rfsrc_train$survival.oob[,m] >0.5
# Confusion matrix
cm_train <- matrix(c(length(which(truth=="FALSE" & pred_train=="FALSE")),length(which(truth=="FALSE" & pred_train=="TRUE")),
length(which(truth=="TRUE" & pred_train=="FALSE")),length(which(truth=="TRUE" & pred_train=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_train) <- c("FALSE","TRUE")
rownames(cm_train) <- c("FALSE","TRUE")
cm_train <- as.table(cm_train)
cm_test <- matrix(c(length(which(truth=="FALSE" & pred_test=="FALSE")),length(which(truth=="FALSE" & pred_test=="TRUE")),
length(which(truth=="TRUE" & pred_test=="FALSE")),length(which(truth=="TRUE" & pred_test=="TRUE"))),
ncol=2,byrow=TRUE)
colnames(cm_test) <- c("FALSE","TRUE")
rownames(cm_test) <- c("FALSE","TRUE")
cm_test <- as.table(cm_test)
# Accuracy
accuracy_train <- (cm_train[1,1] + cm_train[2,2])/sum(cm_train)
accuracy_test <-(cm_test[1,1] + cm_test[2,2])/sum(cm_test)
plot(gg_vimp(rfsrc_train))+
theme(legend.position=c(p=0.8,0.2))+
labs(fill="VIMP > 0")
ggsave("vimp.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
varsel_train <- var.select(rfsrc_train)
gg_md <- gg_minimal_depth(varsel_train)
capture.output(print(gg_md), file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/top_variables.txt"))
plot(gg_md)
ggsave("top_variables.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
plot(gg_minimal_vimp(gg_md))+
theme(legend.position = c(0.8,0.2))
ggsave("var_comparison.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
ggRFsrc + geom_vline(aes(xintercept=1),
linetype="dashed")+
coord_cartesian(xlim=c(0,5))
ggsave("variable_dependence.png", plot=last_plot(),path=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2))
Err_train[a]<<- accuracy_train
Err_Test[a]<<- accuracy_test
rfsrc_test <- predict(rfsrc_train, newdata=data2)
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 3000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1500,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 2500,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
sampsize=0.5,
tree.err=TRUE,
importance=TRUE)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
sampsize=0.5,
tree.err=TRUE,
importance=TRUE)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
sampsize=25,
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
sampsize=25,
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 1000,
nodesize = 3,
data=data2,
nsplit=10,
na.action="na.impute",
sampsize=25,
tree.err=TRUE,
importance=TRUE)
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
capture.output(summary(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/summary_train.txt"))
print(rfsrc_train)
capture.output(print(rfsrc_train),file=paste0("/Users/subinieee/Desktop/ggRFSRC plot/SD",ncol(data2)-2,"/print_train.txt"))
#Generalisation error
gg_error1<-gg_error(rfsrc_train)
setwd("~/Documents/GitHub/mscproject/Random Forest")
