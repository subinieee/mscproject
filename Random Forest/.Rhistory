scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(NA,1)
ggplot(Vis_df, aes(x = p_n, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = p_n, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "P/N")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$TV_P,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$TV_P,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC_train","RFSRC_test","SP_train","SP_test")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC_train","RFSRC_test","SP_train","SP_test"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
source('~/GitHub/mscproject/Random Forest/DF Visualisation.R')
library(randomForestSRC)
library(dplyr)
library(ggplot2)
library(ggRandomForests)
library(parallel)
library(caret)
library(readr)
library(openxlsx)
nrdata<-1
nrtestdata<-1
TV <-10
N<-50#_arr<-c(10,50,100)
p_number<-60#P<-c(20,40,60,80,100)
datasrc <-paste0("~/GitHub/mscproject/Data/N",N,"_P20-100_TV10(",nrdata,")")
# Data cleaning (read .dat file and remove index column)
set.seed(1)
data_train <-read.delim(paste0("",datasrc,"/sd",p_number,"/SD",p_number,".dat"),
skip=3,
sep=(" "),
nrows=N,
header = FALSE,
stringsAsFactors = FALSE)
data_train <- data_train[,-1]
data_test <-read.delim(paste0("~/GitHub/mscproject/Data/test data(",nrtestdata,")/sd",p_number,"_test/SD",p_number,"_test.dat"),
skip=3,
sep=(" "),
nrows=100,
header = FALSE,
stringsAsFactors = FALSE)
data_test <- data_test[,-1]
data_test <-read.delim(paste0("~/GitHub/mscproject/Data/Test(",nrtestdata,")/sd",p_number,"_test/SD",p_number,"_test.dat"),
skip=3,
sep=(" "),
nrows=100,
header = FALSE,
stringsAsFactors = FALSE)
data_test <-read.delim(paste0("~/GitHub/mscproject/Data/Test(",nrtestdata,")/sd",p_number,"_test/SD",p_number,".dat"),
skip=3,
sep=(" "),
nrows=100,
header = FALSE,
stringsAsFactors = FALSE)
data_test <- data_test[,-1]
col_names <-list(1:ncol(data_train))
col_names <-paste0("","A",col_names[[1]],"")
colnames(data_train) <-col_names
colnames(data_train)[length(colnames(data_train))-1] <- "time"
colnames(data_train)[length(colnames(data_train))] <- "event"
data_train$event <-as.numeric(data_train$event)
censored_before<-which(data_train$time[which(data_train$event==0)]<median(data_train$time))
data_train$event[censored_before] <-"1"
data_train$event <-as.numeric(data_train$event)
col_names <-list(1:ncol(data_test))
col_names <-paste0("","A",col_names[[1]],"")
colnames(data_test) <-col_names
colnames(data_test)[length(colnames(data_test))-1] <- "time"
colnames(data_test)[length(colnames(data_test))] <- "event"
data_test$event <-as.numeric(data_test$event)
# Create the gg_survival object
gg_dta <- gg_survival(interval="time",
censor="event",
data=data_train,
conf.int=0.95)
# survival probability vs observation time
plot(gg_dta) +
labs(y="survival Probability",
x="Observation Time(years)",
color="Treatment",
fill="treatment") +
theme(legend.position=c(0.2,0.2)) +
coord_cartesian(y=c(0,1.01))
#cumulative hazard vs obs time
plot(gg_dta, type = "cum_haz") +
labs(y = "Cumulative Hazard",
x = "Observation Time (years)",
color = "Treatment", fill = "Treatment") +
theme(legend.position = c(0.2, 0.8)) +
coord_cartesian(ylim = c(-0.02, 1.22))
#train set train (default nodesize is 15 for survival family - the paper used 3)
rfsrc_train <- rfsrc(Surv(time,event) ~ .,
ntree = 500,
nodesize = 3,
data=data_train,
nsplit=10,
na.action="na.impute",
tree.err=TRUE,
importance=TRUE)
print(rfsrc_train)
View(rfsrc_train)
rfsrc_train[["chf"]]
rfsrc_train[["survival"]]
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$TV_P,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$TV_P,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC_train","RFSRC_test","SP_train","SP_test")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC_train","RFSRC_test","SP_train","SP_test"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/p")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=7),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/p")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11),
axis.text.y = element_text(size=11),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/p")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "TV/p")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("p_n","RFSRC_train","RFSRC_test","SP_train","SP_test")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('p_n'), measure.vars = c("RFSRC_train","RFSRC_test","SP_train","SP_test"))
ggplot(Vis_df, aes(x = p_n, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","steel blue","orange","orange"))+
scale_fill_manual(values=c("steel blue","steel blue","orange","orange"))+
labs(y = "Prediction Accuracy", x = "p/n")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("p_n","RFSRC","SP")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('p_n'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = p_n, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.15) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "p/n")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("dotted","solid", "dotted","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("p_n","RFSRC","SP")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('p_n'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = p_n, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "p/n")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC","SP")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC","SP")
a<-c(1,2,1,2)
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
View(rfsrc_train)
library(readr)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC","SP")
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$p_n,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$p_n,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC","SP")
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/P")+
geom_smooth(method = "lm", alpha = .15), aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
library(readr)
library(openxlsx)
library(dplyr)
library(directlabels)
rsf_data<-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/RSF_results.xlsx",sheet="TV_P")
sp_data <-read.xlsx("/Users/subinieee/GitHub/mscproject/Data/SP_results.xlsx",sheet="TV_P")
precision_var1<-distinct(as_tibble(cbind(rsf_data$TV_P,rsf_data$train, rsf_data$test)), .keep_all = TRUE)
precision_var2<-distinct(as_tibble(cbind(sp_data$TV_P,sp_data$train, sp_data$test)), .keep_all = TRUE)
precision_var<-merge(precision_var1,precision_var2, by="V1",all = TRUE)
colnames(precision_var)<-c("TV_P","RFSRC","SP")
Vis_df <- melt(precision_var, id.vars = c('TV_P'), measure.vars = c("RFSRC","SP"))
ggplot(Vis_df, aes(x = TV_P, y = value, color = variable)) +
geom_point(aes(shape=variable),size = 2, alpha=0.3) +
scale_colour_manual(values=c("steel blue","orange"))+
scale_fill_manual(values=c("steel blue","orange"))+
labs(y = "Precision", x = "TV/p")+
geom_smooth(method = "lm", alpha = .15, aes(fill = variable,linetype= variable),size = 0.8)+
scale_linetype_manual(values=c("solid","solid"))+
theme_bw()+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=11,face = "bold"),
axis.text.y = element_text(size=11,face="bold"),
legend.text=element_text(size=11),
legend.title = element_blank())+
scale_x_continuous(trans = 'log2') +
ylim(0,1)
source('~/GitHub/mscproject/Random Forest/DF Visualisation.R')
