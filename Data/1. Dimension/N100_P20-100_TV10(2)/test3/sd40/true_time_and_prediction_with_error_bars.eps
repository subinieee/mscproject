%!PS-Adobe-2.0 EPSF-2.0
%%Title: sd40/true_time_and_prediction_with_error_bars.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Wed Jul 31 13:37:38 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for Windows-1252 (Western European)
%
/reencodeCP1252 {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding CP1252Encoding def } if
} if
currentdict end definefont
} def
/CP1252Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef
/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeCP1252 def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sd40/true_time_and_prediction_with_error_bars.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 31 13:37:38 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1416 700 M
63 0 V
4136 0 R
-63 0 V
stroke
1332 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1416 911 M
31 0 V
4168 0 R
-31 0 V
1416 1034 M
31 0 V
4168 0 R
-31 0 V
-4168 87 R
31 0 V
4168 0 R
-31 0 V
-4168 68 R
31 0 V
4168 0 R
-31 0 V
-4168 56 R
31 0 V
4168 0 R
-31 0 V
-4168 46 R
31 0 V
4168 0 R
-31 0 V
-4168 41 R
31 0 V
4168 0 R
-31 0 V
-4168 36 R
31 0 V
4168 0 R
-31 0 V
-4168 32 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 1400 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 1611 M
31 0 V
4168 0 R
-31 0 V
1416 1734 M
31 0 V
4168 0 R
-31 0 V
-4168 87 R
31 0 V
4168 0 R
-31 0 V
-4168 68 R
31 0 V
4168 0 R
-31 0 V
-4168 55 R
31 0 V
4168 0 R
-31 0 V
-4168 47 R
31 0 V
4168 0 R
-31 0 V
-4168 41 R
31 0 V
4168 0 R
-31 0 V
-4168 36 R
31 0 V
4168 0 R
-31 0 V
-4168 32 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 2310 M
31 0 V
4168 0 R
-31 0 V
1416 2434 M
31 0 V
4168 0 R
-31 0 V
-4168 87 R
31 0 V
4168 0 R
-31 0 V
-4168 68 R
31 0 V
4168 0 R
-31 0 V
-4168 55 R
31 0 V
4168 0 R
-31 0 V
-4168 47 R
31 0 V
4168 0 R
-31 0 V
-4168 41 R
31 0 V
4168 0 R
-31 0 V
-4168 35 R
31 0 V
4168 0 R
-31 0 V
-4168 33 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 2800 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 3010 M
31 0 V
4168 0 R
-31 0 V
1416 3133 M
31 0 V
4168 0 R
-31 0 V
-4168 88 R
31 0 V
4168 0 R
-31 0 V
-4168 68 R
31 0 V
4168 0 R
-31 0 V
-4168 55 R
31 0 V
4168 0 R
-31 0 V
-4168 47 R
31 0 V
4168 0 R
-31 0 V
-4168 41 R
31 0 V
4168 0 R
-31 0 V
-4168 35 R
31 0 V
4168 0 R
-31 0 V
-4168 32 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 3499 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 3710 M
31 0 V
4168 0 R
-31 0 V
1416 3833 M
31 0 V
4168 0 R
-31 0 V
-4168 88 R
31 0 V
4168 0 R
-31 0 V
-4168 67 R
31 0 V
4168 0 R
-31 0 V
-4168 56 R
31 0 V
4168 0 R
-31 0 V
-4168 47 R
31 0 V
4168 0 R
-31 0 V
-4168 40 R
31 0 V
4168 0 R
-31 0 V
-4168 36 R
31 0 V
4168 0 R
-31 0 V
-4168 32 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 4199 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 4410 M
31 0 V
4168 0 R
-31 0 V
1416 4533 M
31 0 V
4168 0 R
-31 0 V
-4168 88 R
31 0 V
4168 0 R
-31 0 V
-4168 67 R
31 0 V
4168 0 R
-31 0 V
-4168 56 R
31 0 V
4168 0 R
-31 0 V
-4168 47 R
31 0 V
4168 0 R
-31 0 V
-4168 40 R
31 0 V
4168 0 R
-31 0 V
-4168 36 R
31 0 V
4168 0 R
-31 0 V
-4168 32 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1424 700 M
0 31 V
0 4168 R
0 -31 V
1463 700 M
0 63 V
0 4136 R
0 -63 V
stroke
1463 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1716 700 M
0 31 V
0 4168 R
0 -31 V
1864 700 M
0 31 V
0 4168 R
0 -31 V
1969 700 M
0 31 V
0 4168 R
0 -31 V
2051 700 M
0 31 V
0 4168 R
0 -31 V
2118 700 M
0 31 V
0 4168 R
0 -31 V
2174 700 M
0 31 V
0 4168 R
0 -31 V
2223 700 M
0 31 V
0 4168 R
0 -31 V
2266 700 M
0 31 V
0 4168 R
0 -31 V
2304 700 M
0 63 V
0 4136 R
0 -63 V
stroke
2304 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2558 700 M
0 31 V
0 4168 R
0 -31 V
2706 700 M
0 31 V
0 4168 R
0 -31 V
2811 700 M
0 31 V
0 4168 R
0 -31 V
2892 700 M
0 31 V
0 4168 R
0 -31 V
2959 700 M
0 31 V
0 4168 R
0 -31 V
3015 700 M
0 31 V
0 4168 R
0 -31 V
3064 700 M
0 31 V
0 4168 R
0 -31 V
3107 700 M
0 31 V
0 4168 R
0 -31 V
3146 700 M
0 63 V
0 4136 R
0 -63 V
stroke
3146 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3399 700 M
0 31 V
0 4168 R
0 -31 V
3547 700 M
0 31 V
0 4168 R
0 -31 V
3652 700 M
0 31 V
0 4168 R
0 -31 V
3734 700 M
0 31 V
0 4168 R
0 -31 V
3801 700 M
0 31 V
0 4168 R
0 -31 V
3857 700 M
0 31 V
0 4168 R
0 -31 V
3906 700 M
0 31 V
0 4168 R
0 -31 V
3949 700 M
0 31 V
0 4168 R
0 -31 V
3987 700 M
0 63 V
0 4136 R
0 -63 V
stroke
3987 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4241 700 M
0 31 V
0 4168 R
0 -31 V
4389 700 M
0 31 V
0 4168 R
0 -31 V
4494 700 M
0 31 V
0 4168 R
0 -31 V
4575 700 M
0 31 V
0 4168 R
0 -31 V
4642 700 M
0 31 V
0 4168 R
0 -31 V
4698 700 M
0 31 V
0 4168 R
0 -31 V
4747 700 M
0 31 V
0 4168 R
0 -31 V
4790 700 M
0 31 V
0 4168 R
0 -31 V
4829 700 M
0 63 V
0 4136 R
0 -63 V
stroke
4829 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5082 700 M
0 31 V
0 4168 R
0 -31 V
5230 700 M
0 31 V
0 4168 R
0 -31 V
5335 700 M
0 31 V
0 4168 R
0 -31 V
5417 700 M
0 31 V
0 4168 R
0 -31 V
5484 700 M
0 31 V
0 4168 R
0 -31 V
5540 700 M
0 31 V
0 4168 R
0 -31 V
5589 700 M
0 31 V
0 4168 R
0 -31 V
stroke
LTB
LCb setrgbcolor
1416 4899 N
0 -4199 V
4199 0 V
0 4199 V
-4199 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
604 2799 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (predicted event time)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3515 350 M
[ [(Helvetica) 140.0 0.0 true true 0 (true event time)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
4020 4766 M
[ [(Helvetica) 140.0 0.0 true true 0 (predictions versus true values)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
4104 4766 M
399 0 V
4720 3657 M
0 539 V
3676 700 M
0 2989 V
3352 2778 M
0 1278 V
4051 700 M
0 3091 V
4309 700 M
0 2834 V
2879 3411 M
0 728 V
622 -939 R
0 966 V
4620 3731 M
0 525 V
317 -698 R
0 663 V
678 -353 R
0 502 V
4471 3112 M
0 823 V
219 -295 R
0 559 V
3484 2778 M
0 953 V
4779 700 M
0 2989 V
4246 3558 M
0 663 V
3426 700 M
0 2568 V
520 -490 R
0 1196 V
4396 700 M
0 3044 V
393 -421 R
0 690 V
4113 3446 M
0 704 V
721 -739 R
0 742 V
3573 3757 M
0 503 V
4924 700 M
0 4199 V
520 -881 R
0 729 V
4022 3802 M
0 560 V
435 -804 R
0 663 V
4851 700 M
0 3044 V
4460 3200 M
0 802 V
3911 700 M
0 3057 V
2174 2989 M
0 1063 V
3411 700 M
0 2989 V
4202 700 M
0 2623 V
4105 700 M
0 3102 V
4049 700 M
0 2500 V
637 602 R
0 560 V
4061 2989 M
0 1063 V
3531 3411 M
0 742 V
5224 3200 M
0 1437 V
3104 700 M
0 2568 V
756 -490 R
0 953 V
1408 204 R
0 555 V
4514 3822 M
0 562 V
3747 700 M
0 3044 V
492 -544 R
0 966 V
4378 2989 M
0 1081 V
178 -313 R
0 503 V
4357 3802 M
0 476 V
3798 3802 M
0 579 V
4918 3411 M
0 714 V
373 -368 R
0 503 V
4568 3769 M
0 540 V
4699 700 M
0 3969 V
440 -777 R
0 522 V
5038 3935 M
0 470 V
4742 3411 M
0 742 V
3688 3323 M
0 619 V
4047 2778 M
0 1144 V
3674 2989 M
0 926 V
880 14 R
0 478 V
227 -485 R
0 508 V
3350 2778 M
0 953 V
4409 700 M
0 3102 V
4658 2778 M
0 1144 V
3549 2989 M
0 592 V
4172 700 M
0 2778 V
-558 -32 R
0 704 V
4090 700 M
0 3112 V
3709 700 M
0 3044 V
3593 3411 M
0 742 V
4613 700 M
0 2989 V
3109 700 M
0 3102 V
3488 2779 M
0 1195 V
4403 2779 M
0 728 V
918 -96 R
0 742 V
3727 3640 M
0 559 V
3292 2779 M
0 728 V
4380 2778 M
0 1144 V
3803 700 M
0 2568 V
1036 389 R
0 527 V
3710 700 M
0 2623 V
3537 700 M
0 3057 V
3608 700 M
0 2711 V
643 -41 R
0 713 V
3165 700 M
0 2568 V
1559 739 R
0 426 V
3455 700 M
0 2500 V
3919 700 M
0 2711 V
1542 0 R
0 728 V
5279 3791 M
0 573 V
4444 700 M
0 3112 V
3940 3112 M
0 823 V
14 -735 R
0 729 V
4720 4033 CircleF
3676 3478 CircleF
3352 3850 CircleF
4051 3581 CircleF
4309 3323 CircleF
2879 3955 CircleF
3501 3968 CircleF
4620 4095 CircleF
4937 4043 CircleF
5615 4213 CircleF
4471 3744 CircleF
4690 4033 CircleF
3484 3534 CircleF
4779 3478 CircleF
4246 4043 CircleF
3426 2989 CircleF
3946 3769 CircleF
4396 3534 CircleF
4789 3832 CircleF
4113 3968 CircleF
4834 3968 CircleF
3573 4103 CircleF
4924 4699 CircleF
5444 4562 CircleF
4022 4196 CircleF
4457 4043 CircleF
4851 3534 CircleF
4460 3812 CircleF
3911 3534 CircleF
2174 3850 CircleF
3411 3478 CircleF
4202 2989 CircleF
4105 3581 CircleF
4049 2989 CircleF
4686 4196 CircleF
4061 3850 CircleF
3531 3968 CircleF
5224 4429 CircleF
3104 2989 CircleF
3860 3534 CircleF
5268 4325 CircleF
4514 4218 CircleF
3747 3534 CircleF
4239 3968 CircleF
4378 3868 CircleF
4556 4103 CircleF
4357 4125 CircleF
3798 4213 CircleF
4918 3942 CircleF
5291 4103 CircleF
4568 4146 CircleF
4699 4457 CircleF
5139 4253 CircleF
5038 4253 CircleF
4742 3968 CircleF
3688 3769 CircleF
4047 3718 CircleF
3674 3718 CircleF
4554 4253 CircleF
4781 4272 CircleF
3350 3534 CircleF
4409 3581 CircleF
4658 3718 CircleF
3549 3411 CircleF
4172 3200 CircleF
3614 3968 CircleF
4090 3581 CircleF
3709 3534 CircleF
3593 3968 CircleF
4613 3478 CircleF
3109 3581 CircleF
3488 3769 CircleF
4403 3323 CircleF
5321 3968 CircleF
3727 4033 CircleF
3292 3323 CircleF
4380 3718 CircleF
3803 2989 CircleF
4839 4023 CircleF
3710 2989 CircleF
3537 3534 CircleF
3608 2989 CircleF
4251 3900 CircleF
3165 2989 CircleF
4724 4289 CircleF
3455 2989 CircleF
3919 2989 CircleF
5461 3955 CircleF
5279 4196 CircleF
4444 3581 CircleF
3940 3744 CircleF
3954 3744 CircleF
4303 4766 CircleF
% End plot #1
% Begin plot #2
1.000 UL
LTb
0.00 0.62 0.45 C
1416 1361 M
42 35 V
43 36 V
42 35 V
43 35 V
42 35 V
42 36 V
43 35 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
42 36 V
43 35 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 35 V
43 36 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 35 V
43 36 V
42 35 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
42 36 V
43 35 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
42 35 V
43 36 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 35 V
43 36 V
42 35 V
43 35 V
42 35 V
42 36 V
43 35 V
42 35 V
43 36 V
42 35 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
42 35 V
43 36 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 35 V
43 36 V
42 35 V
43 35 V
42 35 V
42 36 V
43 35 V
42 35 V
43 36 V
42 35 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
43 35 V
42 36 V
42 35 V
43 35 V
42 36 V
43 35 V
42 35 V
% End plot #2
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1416 4899 N
0 -4199 V
4199 0 V
0 4199 V
-4199 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
