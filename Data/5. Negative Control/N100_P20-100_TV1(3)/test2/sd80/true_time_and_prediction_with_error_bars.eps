%!PS-Adobe-2.0 EPSF-2.0
%%Title: sd80/true_time_and_prediction_with_error_bars.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Wed Jul 31 15:31:45 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for Windows-1252 (Western European)
%
/reencodeCP1252 {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding CP1252Encoding def } if
} if
currentdict end definefont
} def
/CP1252Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef
/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeCP1252 def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sd80/true_time_and_prediction_with_error_bars.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 31 15:31:45 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1416 700 M
63 0 V
4136 0 R
-63 0 V
stroke
1332 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1416 1016 M
31 0 V
4168 0 R
-31 0 V
1416 1201 M
31 0 V
4168 0 R
-31 0 V
1416 1332 M
31 0 V
4168 0 R
-31 0 V
1416 1434 M
31 0 V
4168 0 R
-31 0 V
-4168 83 R
31 0 V
4168 0 R
-31 0 V
-4168 70 R
31 0 V
4168 0 R
-31 0 V
-4168 61 R
31 0 V
4168 0 R
-31 0 V
-4168 54 R
31 0 V
4168 0 R
-31 0 V
-4168 48 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 1750 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 2066 M
31 0 V
4168 0 R
-31 0 V
1416 2251 M
31 0 V
4168 0 R
-31 0 V
1416 2382 M
31 0 V
4168 0 R
-31 0 V
1416 2483 M
31 0 V
4168 0 R
-31 0 V
-4168 84 R
31 0 V
4168 0 R
-31 0 V
-4168 70 R
31 0 V
4168 0 R
-31 0 V
-4168 61 R
31 0 V
4168 0 R
-31 0 V
-4168 53 R
31 0 V
4168 0 R
-31 0 V
-4168 49 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 2800 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 3116 M
31 0 V
4168 0 R
-31 0 V
1416 3300 M
31 0 V
4168 0 R
-31 0 V
1416 3432 M
31 0 V
4168 0 R
-31 0 V
1416 3533 M
31 0 V
4168 0 R
-31 0 V
-4168 83 R
31 0 V
4168 0 R
-31 0 V
-4168 71 R
31 0 V
4168 0 R
-31 0 V
-4168 61 R
31 0 V
4168 0 R
-31 0 V
-4168 53 R
31 0 V
4168 0 R
-31 0 V
-4168 48 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 3849 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1416 4165 M
31 0 V
4168 0 R
-31 0 V
1416 4350 M
31 0 V
4168 0 R
-31 0 V
1416 4481 M
31 0 V
4168 0 R
-31 0 V
1416 4583 M
31 0 V
4168 0 R
-31 0 V
-4168 83 R
31 0 V
4168 0 R
-31 0 V
-4168 70 R
31 0 V
4168 0 R
-31 0 V
-4168 61 R
31 0 V
4168 0 R
-31 0 V
-4168 54 R
31 0 V
4168 0 R
-31 0 V
-4168 48 R
63 0 V
4136 0 R
-63 0 V
stroke
1332 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1450 700 M
0 31 V
0 4168 R
0 -31 V
1541 700 M
0 31 V
0 4168 R
0 -31 V
1621 700 M
0 31 V
0 4168 R
0 -31 V
1692 700 M
0 63 V
0 4136 R
0 -63 V
stroke
1692 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2163 700 M
0 31 V
0 4168 R
0 -31 V
2438 700 M
0 31 V
0 4168 R
0 -31 V
2634 700 M
0 31 V
0 4168 R
0 -31 V
2785 700 M
0 31 V
0 4168 R
0 -31 V
2909 700 M
0 31 V
0 4168 R
0 -31 V
3014 700 M
0 31 V
0 4168 R
0 -31 V
3105 700 M
0 31 V
0 4168 R
0 -31 V
3185 700 M
0 31 V
0 4168 R
0 -31 V
3256 700 M
0 63 V
0 4136 R
0 -63 V
stroke
3256 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3727 700 M
0 31 V
0 4168 R
0 -31 V
4002 700 M
0 31 V
0 4168 R
0 -31 V
4198 700 M
0 31 V
0 4168 R
0 -31 V
4349 700 M
0 31 V
0 4168 R
0 -31 V
4473 700 M
0 31 V
0 4168 R
0 -31 V
4578 700 M
0 31 V
0 4168 R
0 -31 V
4669 700 M
0 31 V
0 4168 R
0 -31 V
4749 700 M
0 31 V
0 4168 R
0 -31 V
4820 700 M
0 63 V
0 4136 R
0 -63 V
stroke
4820 560 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5291 700 M
0 31 V
0 4168 R
0 -31 V
5566 700 M
0 31 V
0 4168 R
0 -31 V
stroke
LTB
LCb setrgbcolor
1416 4899 N
0 -4199 V
4199 0 V
0 4199 V
-4199 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
772 2799 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (predicted event time)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3515 350 M
[ [(Helvetica) 140.0 0.0 true true 0 (true event time)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
4020 4766 M
[ [(Helvetica) 140.0 0.0 true true 0 (predictions versus true values)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
4104 4766 M
399 0 V
3649 2546 M
0 560 V
329 -717 R
0 612 V
348 -173 R
0 756 V
2438 2527 M
0 793 V
3992 2663 M
0 824 V
5520 2670 M
0 816 V
4691 2633 M
0 628 V
2990 2147 M
0 584 V
329 -140 R
0 789 V
936 -863 R
0 540 V
0 -195 R
0 993 V
4085 3485 M
0 638 V
4591 2807 M
0 807 V
4055 2617 M
0 598 V
5369 2997 M
0 920 V
3663 2670 M
0 816 V
295 -979 R
0 830 V
5339 2823 M
0 762 V
4484 2691 M
0 1274 V
4441 2440 M
0 724 V
3541 2899 M
0 761 V
4190 2517 M
0 619 V
5193 2415 M
0 534 V
3251 3469 M
0 631 V
5615 2663 M
0 789 V
4966 2691 M
0 851 V
605 -851 R
0 851 V
2769 2517 M
0 818 V
4735 2600 M
0 773 V
2177 2600 M
0 773 V
2532 -67 R
0 920 V
3553 2474 M
0 682 V
622 -582 R
0 983 V
99 -839 R
0 849 V
3109 2496 M
0 635 V
328 -540 R
0 789 V
5008 2600 M
0 1185 V
3114 2452 M
0 623 V
2640 2591 M
0 789 V
4167 2907 M
0 738 V
2863 2474 M
0 672 V
5176 2796 M
0 923 V
4228 2546 M
0 560 V
3882 2633 M
0 628 V
2999 2496 M
0 635 V
388 -566 R
0 877 V
2865 2907 M
0 738 V
3787 2389 M
0 583 V
5106 2517 M
0 818 V
4034 2617 M
0 598 V
2641 2833 M
0 995 V
4183 2474 M
0 682 V
860 -639 R
0 1263 V
3009 2507 M
0 632 V
682 -531 R
0 816 V
3252 2997 M
0 873 V
4137 2600 M
0 773 V
410 -799 R
0 871 V
1791 2565 M
0 679 V
2810 2633 M
0 595 V
1563 2452 M
0 355 V
4823 2527 M
0 793 V
3263 2663 M
0 824 V
4662 2617 M
0 598 V
173 -316 R
0 761 V
-30 -663 R
0 920 V
4287 2617 M
0 606 V
4134 2807 M
0 807 V
4331 2452 M
0 355 V
4064 2452 M
0 623 V
2874 2625 M
0 878 V
4538 2591 M
0 789 V
3170 2428 M
0 448 V
680 -285 R
0 789 V
729 -557 R
0 762 V
3817 2546 M
0 560 V
829 -489 R
0 598 V
4388 2823 M
0 810 V
966 -896 R
0 1073 V
4118 2608 M
0 816 V
2002 2862 M
0 993 V
1820 2507 M
0 810 V
442 -489 R
0 756 V
4202 2663 M
0 789 V
1416 2428 M
0 448 V
3975 2670 M
0 816 V
3354 2537 M
0 898 V
5019 2807 M
0 807 V
4967 2507 M
0 830 V
4408 2907 M
0 738 V
4570 2591 M
0 664 V
3258 2591 M
0 664 V
997 -622 R
0 595 V
3192 2608 M
0 816 V
203 -824 R
0 1185 V
3879 2496 M
0 944 V
194 -703 R
0 784 V
2435 2507 M
0 810 V
3796 2474 M
0 682 V
4796 2617 M
0 606 V
3649 2907 CircleF
3978 2790 CircleF
4326 3347 CircleF
2438 3078 CircleF
3992 3240 CircleF
5520 3240 CircleF
4691 3047 CircleF
2990 2527 CircleF
3319 3139 CircleF
4255 2862 CircleF
4255 3588 CircleF
4085 3907 CircleF
4591 3369 CircleF
4055 3007 CircleF
5369 3658 CircleF
3663 3240 CircleF
3958 3089 CircleF
5339 3347 CircleF
4484 3676 CircleF
4441 2933 CircleF
3541 3422 CircleF
4190 2924 CircleF
5193 2756 CircleF
3251 3886 CircleF
5615 3210 CircleF
4966 3291 CircleF
5571 3291 CircleF
2769 3089 CircleF
4735 3133 CircleF
2177 3133 CircleF
4709 3967 CircleF
3553 2933 CircleF
4175 3291 CircleF
4274 3317 CircleF
3109 2916 CircleF
3437 3139 CircleF
5008 3501 CircleF
3114 2862 CircleF
2640 3139 CircleF
4167 3411 CircleF
2863 2924 CircleF
5176 3460 CircleF
4228 2907 CircleF
3882 3047 CircleF
2999 2916 CircleF
3387 3188 CircleF
2865 3411 CircleF
3787 2768 CircleF
5106 3089 CircleF
4034 3007 CircleF
2641 3561 CircleF
4183 2933 CircleF
5043 3492 CircleF
3009 2924 CircleF
3691 3178 CircleF
3252 3616 CircleF
4137 3133 CircleF
4547 3192 CircleF
1791 3021 CircleF
2810 3021 CircleF
1563 2663 CircleF
4823 3078 CircleF
3263 3240 CircleF
4662 3007 CircleF
4835 3422 CircleF
4805 3658 CircleF
4287 3014 CircleF
4134 3369 CircleF
4331 2663 CircleF
4064 2862 CircleF
2874 3249 CircleF
4538 3139 CircleF
3170 2705 CircleF
3850 3139 CircleF
4579 3347 CircleF
3817 2907 CircleF
4646 3007 CircleF
4388 3388 CircleF
5354 3535 CircleF
4118 3178 CircleF
2002 3588 CircleF
1820 3072 CircleF
2262 3347 CircleF
4202 3210 CircleF
1416 2705 CircleF
3975 3240 CircleF
3354 3178 CircleF
5019 3369 CircleF
4967 3089 CircleF
4408 3411 CircleF
4570 3034 CircleF
3258 3034 CircleF
4255 3021 CircleF
3192 3178 CircleF
3395 3501 CircleF
3879 3178 CircleF
4073 3280 CircleF
2435 3072 CircleF
3796 2933 CircleF
4796 3014 CircleF
4303 4766 CircleF
% End plot #1
% Begin plot #2
1.000 UL
LTb
0.00 0.62 0.45 C
1416 1564 M
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 28 V
43 29 V
42 28 V
43 29 V
42 28 V
42 29 V
43 28 V
42 29 V
43 28 V
42 29 V
% End plot #2
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1416 4899 N
0 -4199 V
4199 0 V
0 4199 V
-4199 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
